name: 🚀 QRCraft Studio CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8.15.0'

jobs:
  # 🧪 Testes e Qualidade
  test:
    name: 🧪 Tests & Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: 📦 Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}
        
    - name: 📂 Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: 🗄️ Cache pnpm store
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: 📦 Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: 🔍 Lint code
      run: pnpm lint
      
    - name: 🧪 Run tests
      run: pnpm test --coverage
      
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: 📈 SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  # 🏗️ Build
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: 📦 Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}
        
    - name: 📂 Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: 🗄️ Cache pnpm store
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: 📦 Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: 🏗️ Build application
      run: pnpm build
      env:
        VITE_APP_VERSION: ${{ github.sha }}
        VITE_BUILD_TIME: ${{ github.run_number }}
        
    - name: 📊 Bundle analyzer
      run: |
        npx vite-bundle-analyzer dist/stats.html
        
    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: dist/
        retention-days: 30
        
  # 🚀 Deploy to Netlify
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: dist/
        
    - name: 🚀 Deploy to Netlify
      uses: netlify/actions/cli@master
      with:
        args: deploy --prod --dir=dist --message="Deploy from GitHub Actions"
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        
    - name: 🔍 Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: '.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true
        
  # 📱 Build Mobile Apps
  mobile-build:
    name: 📱 Build Mobile Apps
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: 📦 Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}
        
    - name: 📦 Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: 🏗️ Build web app
      run: pnpm build
      
    - name: 📱 Setup Capacitor
      run: |
        pnpm add -g @capacitor/cli
        npx cap sync
        
    - name: 🤖 Build Android
      run: |
        npx cap build android --release
        
    - name: 📦 Upload Android APK
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: android/app/build/outputs/apk/release/
        retention-days: 30
        
  # 🔐 Security Audit
  security:
    name: 🔐 Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Run security audit
      run: |
        npm audit --audit-level high
        
    - name: 🔍 Dependency vulnerability scan
      uses: anchore/scan-action@v3
      with:
        path: "."
        fail-build: false
        
    - name: 📊 Upload security scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif
        
  # 📊 Performance Monitoring
  performance:
    name: 📊 Performance Monitoring
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🌐 Wait for deployment
      run: sleep 30
      
    - name: 📊 Run Lighthouse
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://qrcraftstudio.netlify.app
        configPath: '.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true
        
    - name: 📈 Performance budget check
      run: |
        npx lighthouse-ci assert --config=.lighthouserc.json
        
  # 🚨 Notify on Failure
  notify:
    name: 🚨 Notify on Failure
    runs-on: ubuntu-latest
    needs: [test, build, deploy]
    if: failure()
    
    steps:
    - name: 🚨 Send Slack notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        message: |
          🚨 QRCraft Studio deployment failed!
          
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
          Author: ${{ github.actor }}
          
          Check the logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
  # 🎉 Success Notification
  success:
    name: 🎉 Success Notification
    runs-on: ubuntu-latest
    needs: [test, build, deploy, mobile-build]
    if: success()
    
    steps:
    - name: 🎉 Send success notification
      uses: 8398a7/action-slack@v3
      with:
        status: 'success'
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        message: |
          🎉 QRCraft Studio deployed successfully!
          
          🌐 Web: https://qrcraftstudio.netlify.app
          📱 Mobile builds available in artifacts
          
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
          Author: ${{ github.actor }} 